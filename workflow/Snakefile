configfile: "config/config.yaml"

ODATE = config['odate'] # YYYYMMDD 포멧의 현재날짜, config.yaml 에서 가져옴, snakemake 명령줄 실행시 --config 옵션 해당 옵션이 기재되면 명령줄 내용으로 overwrite

LOGS_DIR = 'logs' # 로그파일 디렉토리 
RULES_DIR = 'rules' # 작업할 rule들이 보관된 디렉토리 
ENVS_DIR = 'envs' # 환경변수 디렉토리 
SCRIPTS_DIR = 'scripts' # 스크립트 디렉토리 

EXPORT_LIMS_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}}/export_lims.txt", ODATE=ODATE)
SFTP_MATCH1_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}/sftp_odm.txt", ODATE=ODATE)
EXPORT_SAMPLE_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}/remain_sample.txt", ODATE=ODATE)
LOAD_LIMS_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}/load_lims.txt", ODATE=ODATE)
LOAD_MATCH1_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}/load_match_1.txt", ODATE=ODATE)
LOAD_STAMP2_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}/load_stamp_2.txt", ODATE=ODATE)
LOAD_SAMPLE_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}//load_sample.txt", ODATE=ODATE)
LOAD_FS_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}/load_fs.txt", ODATE=ODATE)
LOAD_MART_FILE = expand("/home/ubuntu/mlops-de-pipeline/{ODATE}/load_mart.txt", ODATE=ODATE)

#include: f'{RULES_DIR}/pipeline.smk'
#include: f'{RULES_DIR}/pipeline_test.smk' 

rule all: # 전체 실행 룰 
	input:
		#MART_FILE 
		#SFTP_MATCH1_FILE
		#EXPORT_LIMS_FILE
		#EXPORT_SAMPLE_FILE
		LOAD_STAMP2_FILE
		#LOAD_LIMS_FILE
	group: "pipeline"

rule sftp_odm: 
	output: 
		#SFTP_MATCH1_FILE 
		#EXPORT_LIMS_FILE
		#EXPORT_SAMPLE_FILE
		LOAD_STAMP2_FILE
		#LOAD_LIMS_FILE
	conda: 
		f'{ENVS_DIR}/pipeline.yaml' 
	params:
		ODATE=ODATE 
	group: 
		"pipeline" 
	script: 
		#f'{SCRIPTS_DIR}/sftp_odm.py' 
		#f'{SCRIPTS_DIR}/export_lims.py' 
		#f'{SCRIPTS_DIR}/remain_sample.py' 
		f'{SCRIPTS_DIR}/load_stamp_2.py' 
		#f'{SCRIPTS_DIR}/load_lims.py' 
		
